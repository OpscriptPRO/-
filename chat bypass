-- This will not work in games with new chat! -- youtube.com/@publicized -- This includes an ANTI BAN script! If you were reported, you will not be banned! local function bypass() if not game:IsLoaded() then game.Loaded:wait() end local ACL_LoadTime = tick() local NotificationTitle = "youtube.com/@publicized" local OldCoreTypeSettings = {} local WhitelistedCoreTypes = { "Chat", "All", Enum.CoreGuiType.Chat, Enum.CoreGuiType.All } local OldCoreSetting = nil local CoreGui = game:GetService("CoreGui") local StarterGui = game:GetService("StarterGui") local TweenService = game:GetService("TweenService") local TextChatService = game:GetService("TextChatService") local Players = game:GetService("Players") local Player = Players.LocalPlayer local Notify = function(_Title, _Text , Time) StarterGui:SetCore("SendNotification", {Title = _Title, Text = _Text, Icon = "rbxassetid://2541869220", Duration = Time}) end local Tween = function(Object, Time, Style, Direction, Property) return TweenService:Create(Object, TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction]), Property) end local PlayerGui = Player:FindFirstChildWhichIsA("PlayerGui") do if not PlayerGui then local Timer = tick() + 5 repeat task.wait() until Player:FindFirstChildWhichIsA("PlayerGui") or (tick() > Timer) PlayerGui = Player:FindFirstChildWhichIsA("PlayerGui") or false if not PlayerGui then return Notify(NotificationTitle, "where the fuck is the playergui", 10) end end end if getgenv().AntiChatLogger then return Notify(NotificationTitle, "already loaded dumbass", 15) else getgenv().AntiChatLogger = true end local Metatable = getrawmetatable(StarterGui) setreadonly(Metatable, false) local MessageEvent = Instance.new("BindableEvent") if hookmetamethod then local CoreHook do CoreHook = hookmetamethod(StarterGui, "__namecall", newcclosure(function(self, ...) local Method = getnamecallmethod() local Arguments = {...} if self == StarterGui and not checkcaller() then if Method == "SetCoreGuiEnabled" then local CoreType = Arguments[1] local Enabled = Arguments[2] if table.find(WhitelistedCoreTypes, CoreType) and Enabled == false then -- Thanks Harun for correcting me on the second argument OldCoreTypeSettings[CoreType] = Enabled return end elseif Method == "SetCore" then local Core = Arguments[1] local Connection = Arguments[2] if Core == "CoreGuiChatConnections" then OldCoreSetting = Connection return end end end return CoreHook(self, ...) end)) end if not getgenv().ChattedFix then getgenv().ChattedFix = true local ChattedFix do ChattedFix = hookmetamethod(Player, "__index", newcclosure(function(self, index) if self == Player and index == "Chatted" then return MessageEvent.Event end return ChattedFix(self, index) end)) end task.spawn(function() local ChattedSignal = false for _, x in next, getgc() do if type(x) == "function" and tostring(getfenv(x).script) == "Animate" then if islclosure(x) then local Constants = getconstants(x) for _, v in next, Constants do if v == "Chatted" then ChattedSignal = x end end end end end if ChattedSignal then ChattedSignal() -- to prevent emote chat commands from breaking on join end end) end end local EnabledChat = task.spawn(function() repeat StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true) task.wait() until StarterGui:GetCoreGuiEnabled(Enum.CoreGuiType.Chat) end) local WarningGuiThread = print("lmao") if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then WarningUI.Enabled = true Reason_1.Visible = true return end local PlayerScripts = Player:WaitForChild("PlayerScripts") local ChatMain = PlayerScripts:FindFirstChild("ChatMain", true) or false if not ChatMain then local Timer = tick() repeat task.wait() until PlayerScripts:FindFirstChild("ChatMain", true) or tick() > (Timer + 3) ChatMain = PlayerScripts:FindFirstChild("ChatMain", true) if not ChatMain then WarningUI.Enabled = true Reason_2.Visible = true return end end local PostMessage = require(ChatMain).MessagePosted if not PostMessage then WarningUI.Enabled = true Reason_3.Visible = true return end local OldFunctionHook; OldFunctionHook = hookfunction(PostMessage.fire, function(self, Message) if self == PostMessage then MessageEvent:Fire(Message) return end return OldFunctionHook(self, Message) end) if setfflag then pcall(function() setfflag("AbuseReportScreenshot", "False") setfflag("AbuseReportScreenshotPercentage", "0") end) end -- To prevent roblox from taking screenshots of your client. task.delay(1, function() WarningUI:Destroy() end) for _, x in next, OldCoreTypeSettings do if not x then StarterGui:SetCore("ChatActive", false) end StarterGui:SetCoreGuiEnabled(_, x) end if OldCoreSetting then StarterGui:SetCore("CoreGuiChatConnections", OldCoreSetting) end if StarterGui:GetCore("ChatActive") then StarterGui:SetCore("ChatActive", false) StarterGui:SetCore("ChatActive", true) end --Metatable.__namecall = CoreHook if CoreHook then setmetatable(Metatable, {__namecall = CoreHook}) end setreadonly(Metatable, true) Notify(NotificationTitle, "successfully loaded", 15) print(string.format("successfully loaded in %s seconds.", string.format("%.2f", tostring(tick() - ACL_LoadTime)))) local chatService, players = game:GetService("Chat"), game:GetService("Players") local custom_chars = { [" "] = "￰", ["i"] = "і", ["e"] = "е", ["g"] = "ḡ", ["c"] = "с", ["o"] = "о", ["p"] = "р", ["s"] = "ѕ", ["u"] = "υ" } local default = " ိ" local player = players.LocalPlayer local playerGui = player:WaitForChild("PlayerGui") local chatGui, chatBar = playerGui:WaitForChild("Chat") repeat task.wait() until chatGui:FindFirstChild("ChatBar", true) chatBar = chatGui:FindFirstChild("ChatBar", true) do local randomstr = function() local characters = {"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"} local str = "" local length = math.random(12, 32) for i = 1, length do str = str .. characters[math.random(#characters)] end return str end task.spawn(function() while wait(.1) do if chatBar:IsFocused() then chatService:FilterStringForBroadcast(randomstr(), player) end end end) end local c = function() for i = 1, 2 do game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/e Hey how are you doing?", "All") game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/e How are you doing?", "All") end end local old old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...) local method = getnamecallmethod() local args = {...} if method == "FireServer" and self.Name == "SayMessageRequest" and #args == 2 and not checkcaller() then local newMessage = args[1] for i,v in pairs(custom_chars) do local rep = string.gsub(newMessage, i, v .. "⁥") newMessage = rep end newMessage = "RAPE￰" .. newMessage .. default args[1] = newMessage coroutine.wrap(c) return old(self, unpack(args)) end return old(self, ...) end)) end local function note() wait(0.1) game.StarterGui:SetCore("SendNotification", { Title = "youtube.com/@publicized"; Text = "the game has new roblox chat or isnt supported"; Duration = 100000; }) end if not game.Chat:FindFirstChild('ChatModules')or game.Players.LocalPlayer.PlayerGui.Chat.Enabled==false then note() else bypass() end